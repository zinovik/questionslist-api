swagger: "2.0"
info:
  version: 1.0.0
  title: questionslist-api
  description: My cool TypeScript app
basePath: /api/v1
tags:
  - name: Examples
    description: Simple example endpoints
  - name: Questions
    description: Questions endpoints
  - name: Specification
    description: The swagger API specification

consumes:
  - application/json
produces:
  - application/json


definitions:
  ExampleBody:
    type: object
    title: example
    required:
      - name
    properties:
      name:
        type: string
        example: no_stress
  QuestionBody:
    type: object
    title: question
    properties:
      name:
        type: string
        example: no_stress
  CategoryBody:
    type: object
    title: category
    properties:
      name:
        type: string
        example: no_stress
  LoginBody:
    type: object
    title: example
    required:
      - token
    properties:
      token:
        type: string
        example: no_stress

paths:
  /examples:
    get:
      tags:
        - Examples
      description: Fetch all examples
      responses:
        200:
          description: Returns all examples
    post:
      tags:
        - Examples
      description: Create a new example
      parameters:
        - name: example
          in: body
          description: an example
          required: true
          schema: 
            $ref: "#/definitions/ExampleBody"
      responses:
        200:
          description: Returns all examples

  /examples/{id}:
    get:
      tags:
        - Examples
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the example to retrieve
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not found

  /spec:
    get:
      tags:
        - Specification
      responses:
        200:
          description: Return the API specification

  /questions:
    get:
      tags:
        - Questions
      description: Fetch all questions
      responses:
        200:
          description: Returns all questions
    post:
      tags:
        - Questions
      description: Create a new question
      parameters:
        - name: name
          in: body
          description: a question
          required: true
          schema: 
            $ref: "#/definitions/QuestionBody"
      responses:
        200:
          description: Returns all questions
    put:
      tags:
        - Questions
      description: Update a question
      parameters:
        - name: name
          in: body
          description: a question
          required: true
          schema: 
            $ref: "#/definitions/QuestionBody"
      responses:
        200:
          description: Returns all questions
    delete:
      tags:
        - Questions
      description: Delete a question
      parameters:
        - id: id
          in: body
          description: a question
          required: true
          schema: 
            $ref: "#/definitions/QuestionBody"
      responses:
        200:
          description: Returns all questions

  /categories:
    get:
      tags:
        - Categories
      description: Fetch all categories
      responses:
        200:
          description: Returns all categories
    post:
      tags:
        - Categories
      description: Create a new category
      parameters:
        - name: name
          in: body
          description: a category
          required: true
          schema: 
            $ref: "#/definitions/CategoryBody"
      responses:
        200:
          description: Returns all categories
    put:
      tags:
        - Categories
      description: Update a category
      parameters:
        - name: name
          in: body
          description: a category
          required: true
          schema: 
            $ref: "#/definitions/CategoryBody"
      responses:
        200:
          description: Returns all categories
    delete:
      tags:
        - Categories
      description: Delete a category
      parameters:
        - id: id
          in: body
          description: a category
          required: true
          schema: 
            $ref: "#/definitions/CategoryBody"
      responses:
        200:
          description: Returns all categories

  /authorization/login:
    post:
      tags:
        - Authorization
      description: Login with google token
      parameters:
        - token: example
          in: body
          description: a token
          required: true
          schema: 
            $ref: "#/definitions/LoginBody"
      responses:
        200:
          description: User name